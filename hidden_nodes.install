<?php
/**
 * @file
 * Installation routine for hidden nodes.
 */

/**
 * Implements hook_install().
 */
function hidden_nodes_install() {
  // Make sure that the hidden_nodes module runs before menu alter system.


  db_update('system')
  ->fields(array(
    'weight' => -1,
  ))
  ->condition('name', 'hidden_nodes')
  ->condition('type', 'module')
  ->execute();
  // Dynamically generated variable data was detected on the following lines.
  // /hidden_nodes/hidden_nodes.module line 127
  // /hidden_nodes/hidden_nodes.module line 134
  // /hidden_nodes/hidden_nodes.module line 161
}

/**
 * Implements hook_uninstall().
 */
function hidden_nodes_uninstall() {
  // Remove variables.


  config_clear('hidden_nodes.settings', 'hidden_nodes_types');
  config_clear('hidden_nodes.settings', 'hidden_nodes_apply_styles');
  config_clear('hidden_nodes.settings', 'hidden_nodes_show_message');
  config_clear('hidden_nodes.settings', 'hidden_nodes_message');
  config_clear('hidden_nodes.settings', 'hidden_nodes_show_partial_message');
  config_clear('hidden_nodes.settings', 'hidden_nodes_partial_message');
  config_clear('hidden_nodes.settings', 'hidden_nodes_show_parent_message');
  config_clear('hidden_nodes.settings', 'hidden_nodes_parent_message');
}

/**
 * Implements hook_schema().
 */
function hidden_nodes_schema() {
  $schema['hidden_nodes'] = array(
    'description' => 'The base table for hidden nodes.',
    'fields' => array(
      'nid' => array(
        'description' => 'The primary identifier for a node.',
        'type' => 'int',
        'not null' => TRUE,
      ),
      'hidden' => array(
        'description' => 'Boolean indicating whether the node is hidden.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'indexes' => array(
      'hidden' => array('hidden'),
    ),
    'primary key' => array('nid'),
  );
  return $schema;
}

/**
 * Migrate hidden_nodes variables to config.
 */
function hidden_nodes_update_1000() {
  $config = config('hidden_nodes.settings');
  $config->set('hidden_nodes_priority', update_variable_get('hidden_nodes_priority', '1000'));
  $config->set('hidden_nodes_types', update_variable_get('hidden_nodes_types', array()));
  $config->set('hidden_nodes_apply_styles', update_variable_get('hidden_nodes_apply_styles', '1'));
  $config->set('hidden_nodes_show_message', update_variable_get('hidden_nodes_show_message', '1'));
  $config->set('hidden_nodes_message', update_variable_get('hidden_nodes_message', 'dynamic value in file /hidden_nodes/hidden_nodes.module line 127'));
  $config->set('hidden_nodes_show_partial_message', update_variable_get('hidden_nodes_show_partial_message', '0'));
  $config->set('hidden_nodes_partial_message', update_variable_get('hidden_nodes_partial_message', 'dynamic value in file /hidden_nodes/hidden_nodes.module line 134'));
  $config->set('hidden_nodes_show_parent_message', update_variable_get('hidden_nodes_show_parent_message', '1'));
  $config->set('hidden_nodes_parent_message', update_variable_get('hidden_nodes_parent_message', 'dynamic value in file /hidden_nodes/hidden_nodes.module line 161'));
  $config->save();

  update_variable_del('hidden_nodes_priority');
  update_variable_del('hidden_nodes_types');
  update_variable_del('hidden_nodes_apply_styles');
  update_variable_del('hidden_nodes_show_message');
  update_variable_del('hidden_nodes_message');
  update_variable_del('hidden_nodes_show_partial_message');
  update_variable_del('hidden_nodes_partial_message');
  update_variable_del('hidden_nodes_show_parent_message');
  update_variable_del('hidden_nodes_parent_message');
}
